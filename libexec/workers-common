trap 'echo "Received signal TERM... sending QUIT to $PID"; kill -QUIT $PID; echo "Waiting on $PID to exit"; wait $PID' TERM

USAGE="Usage: $0 DEPLOYMENT_CONFIG"
DEPLOYMENT_CONFIG=${1?"$USAGE"}

source $PTERO_COMMON

if [ ! -f "$DEPLOYMENT_CONFIG" ]; then
    log "Must specify a configuration file"
    exit 1
fi

CONFIG_FILE=$(python_realpath $DEPLOYMENT_CONFIG)

if [[ -z "$PTERO_DEPLOY_APP_NAME" ]]; then
    echo "You must export PTERO_DEPLOY_APP_NAME"
    exit 1
fi

log "Setting up environment for $PTERO_DEPLOY_APP_NAME worker from config file: $CONFIG_FILE"

verify_jq
if [ $(jq '.services?.'"\"${PTERO_DEPLOY_APP_NAME}\""'|type|@text' ${CONFIG_FILE}) = '"null"' ]; then
    echo "Failed to find configuration for service ${PTERO_DEPLOY_APP_NAME} in config file ${CONFIG_FILE}" 1>&2
    exit 1
fi

VARS=$(jq -r '.services.'"\"${PTERO_DEPLOY_APP_NAME}\""'.environment|with_entries(.key = .key + "=" + .value)|keys|@sh' "${CONFIG_FILE}" | sed s/\'//g)
WORKER_VARS=$(jq -r '.services.'"\"${PTERO_DEPLOY_APP_NAME}\""'."worker-environment"|with_entries(.key = .key + "=" + .value)|keys|@sh' "${CONFIG_FILE}" | sed s/\'//g)

for env_var in "$VARS $WORKER_VARS"; do
    eval "export $env_var"
done
